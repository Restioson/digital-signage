name: Backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all commits on current main
        run: git fetch origin main
      - name: Log all commits we will analyze
        run: git log --pretty=format:%s origin/main..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv squash!
      - name: Disallow drop! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv drop!

  formatting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install project
        run: just setup
      - uses: dprint/check@v2.2

  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install project
        run: just setup
      - name: Lint
        run: just lint-backend
      - name: Test
        run: just test-backend

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install project
        run: just setup
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - name: Lint
        run: just lint-frontend
      - name: Test
        run: just test-frontend
